{"version":3,"sources":["static/Fashion_logo.png","components/Navigation.js","static/Kids.jpeg","views/Home.js","static/HangedClothes.jpeg","static/Jacket.jpg","views/About.js","static/Profile_Pic.jpg","views/Contact.js","components/Product/ProductCards.js","context/Products/ProductState.js","components/Product/SortPriceAndSize.js","components/Product/List.js","views/ProductList.js","views/LogIn.js","components/Statistic/StatisticData.js","views/Statistic.js","App.js","index.js"],"names":["Navigation","Navbar","fixed","className","collapseOnSelect","expand","Container","Brand","to","src","Logo","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Math","random","slideImages","url","caption","Home","map","slideImage","index","style","backgroundImage","Kids","About","HangedClothes","avgSentencesPerParagraph","Jacket","Contact","useState","name","setName","age","setAge","gender","setGender","email","setEmail","comments","setComments","nameError","React","createRef","ageError","genderError","emailLengthError","emailFormatError","commentsError","updateUserData","event","target","value","checkErrorsUsingOnChange","changedElement","newValue","trim","length","current","display","senderError","checkErrorsUsingOnBlur","test","handleValidation","validationSuccessful","handleSubmit","a","preventDefault","user","jsonUSer","JSON","stringify","settings","method","body","headers","fetch","response","json","message","console","log","ProfilePic","onSubmit","htmlFor","onBlur","onChange","ref","type","ProductCardS","props","priceDisplay","dataObj","priceO","priceR","undefined","Card","Img","variant","images","onMouseOver","e","currentTarget","onMouseOut","Body","Title","brand","Text","description","ProductContext","createContext","ProductState","arrayOfObj","require","undefinedPriceRArr","filter","includePriceRArr","replaceKeyForPriceR","rest","mergeArrayOfObj","Provider","children","SortPriceAndSize","useContext","listOfSizes","i","Object","values","sizes","forEach","includes","push","alphabetSizes","numberSize","mergeAlphabetAndNumberArray","sort","b","concat","NavDropdown","title","text","Item","onClick","sortLowToHigh","textContent","sortHighToLow","sortBySize","size","List","isFirstRender","setIsFirstRender","arrayOfObjState","mergeArrayOfObjState","setMergeArrayOfObjState","sizeSelected","setSizeSelected","dropDownValue","setDropDownValue","setTargetSizeValue","sortPriceLowToHigh","sortPriceHighToLow","filterProductsBySize","useEffect","data","currentObj","ProductList","LogIn","password","setPassword","passwordError","jsonUser","brandByCostLessThan40","sameBrand","reduce","currentData","brandArray","maxValue","max","keys","find","key","brandByLargestSelectionOfSizes","newProductData","obj","StatisticData","brandName","Statistic","App","path","exact","component","render","root","document","querySelector","ReactDOM"],"mappings":"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","file":"static/js/main.c1e02e84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Fashion_logo.505cffb7.png\";","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../static/Fashion_logo.png\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Navigation = () => {\n  // Navigation Bar\n  return (\n    <>\n      <Navbar\n        fixed=\"top\"\n        className=\"navbar\"\n        collapseOnSelect\n        expand=\"lg\"\n      >\n        <Container>\n          <Navbar.Brand>\n            <Link to=\"/home\" className=\"items\">\n              <img className=\"logo\" src={Logo} alt=\"logo\" />\n            </Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"toggle_navbar\">\n            <Nav className=\"me-auto\">\n              <Nav.Link>\n                <Link to=\"/home\" className=\"items\">\n                  Home\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link to=\"/about\" className=\"items\">\n                  About\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link key={Math.random} to=\"/productList\" className=\"items\">\n                  Collection\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link to=\"/contact\" className=\"items\">\n                  Contact\n                </Link>\n              </Nav.Link>\n              \n              {/* <Nav.Link><Link to=\"/statistic\" className=\"items\">Statistic</Link></Nav.Link>   */}\n            </Nav>\n            <Nav>\n              <Nav.Link>\n                <Link to=\"/login\" className=\"items\">\n                  Log In\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link to=\"/wishlist\" className=\"items\">\n                  Wishlist\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link to=\"/bag\" className=\"items\">\n                  Bag\n                </Link>\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/Kids.a62c4b3b.jpeg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Slide } from \"react-slideshow-image\";\nimport \"react-slideshow-image/dist/styles.css\";\nimport \"../scss/home.scss\";\nimport Kids from \"../static/Kids.jpeg\";\n\nconst slideImages = [\n  {\n    url: \"https://images.unsplash.com/photo-1483181957632-8bda974cbc91?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\",\n    caption: \"Select your new perfect style\",\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1622290291468-a28f7a7dc6a8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1072&q=80\",\n    caption: \"Slide 2\",\n  },\n  {\n    url: \"https://images.unsplash.com/photo-1549037173-e3b717902c57?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\",\n    caption: \"Slide 3\",\n  },\n];\nconst Home = () => {\n  return (\n    <>\n      <div className=\"slide-container\">\n        <Slide>\n          {slideImages.map((slideImage, index) => (\n            <div className=\"each-slide\" key={index}>\n              <div\n                className=\"bg_image_1\"\n                style={{ backgroundImage: `url(${slideImage.url})` }}\n              >\n                <div\n                  className=\"bg_image_2\"\n                  style={{ backgroundImage: `url(${slideImage.url})` }}\n                ></div>\n                <div className=\"description\">\n                  {/* <span className=\"caption\">{slideImage.caption}</span> */}\n                  <Link key={Math.random} to=\"/productList\">\n                    <button className=\"btn_shop_now\">Shop now</button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ))}\n        </Slide>\n      </div>\n      <div className=\"images_home_container\">\n        <div className=\"img_container\">\n          <img src=\"https://images.unsplash.com/photo-1480455624313-e29b44bbfde1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\" alt=\"Men\" />\n          <button>Men</button>\n        </div>\n\n        <div className=\"img_container\">\n          <img src=\"https://images.unsplash.com/photo-1509461641751-ed8c60422376?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\" alt=\"Women\" />\n          <button>Women</button>\n        </div>\n        <div className=\"img_container\">\n          <img src={Kids} alt=\"Kids\" />\n          <button>Kids</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/HangedClothes.44038b20.jpeg\";","export default __webpack_public_path__ + \"static/media/Jacket.7b019ef6.jpg\";","import React from \"react\";\nimport { LoremIpsum } from \"react-lorem-ipsum\";\nimport HangedClothes from \"../static/HangedClothes.jpeg\";\nimport Jacket from \"../static/Jacket.jpg\";\nimport \"../scss/about.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about_main_container\">\n      <div className=\"about_container_1\">\n        <img src={HangedClothes} alt=\"Hanged clothes\" />\n        <LoremIpsum className=\"description\" avgSentencesPerParagraph={20} />\n      </div>\n\n      <div className=\"about_container_2\">\n        <img src={Jacket} alt=\"Hanged clothes\" />\n        <LoremIpsum className=\"description\" avgSentencesPerParagraph={20} />\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/Profile_Pic.5ada1c87.jpg\";","import React, { useState } from \"react\";\nimport ProfilePic from \"../static/Profile_Pic.jpg\";\nimport \"../scss/contact.scss\";\n\nconst Contact = () => {\n  // State is in control of the data in this React component!\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"--- Please select ---\");\n  const [email, setEmail] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n\n  // A \"ref\" is short for a \"reference\"\n  // We use refs to store a reference to a JSX element, so we can select it if we need to\n  // We should use refs sparingly - only where they are needed. However, there is no limit to how many we can use\n  const nameError = React.createRef();\n  const ageError = React.createRef();\n  const genderError = React.createRef();\n  const emailLengthError = React.createRef();\n  const emailFormatError = React.createRef();\n  const commentsError = React.createRef();\n\n  // Function 1: to update a state variable, based on what the user changed\n  // (e.g. changing the \"age\" input will update ONLY the \"age\" state variable)\n  // Once the state variable is changed, the checkErrorsUsingOnChange() function will also be called, for validation\n  const updateUserData = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        setName(event.target.value);\n        checkErrorsUsingOnChange(\"name\", event.target.value);\n        break;\n      case \"age\":\n        setAge(event.target.value);\n        checkErrorsUsingOnChange(\"age\", event.target.value);\n        break;\n      case \"gender\":\n        setGender(event.target.value);\n        checkErrorsUsingOnChange(\"gender\", event.target.value);\n        break;\n      case \"email\":\n        setEmail(event.target.value);\n        checkErrorsUsingOnChange(\"email\", event.target.value);\n        break;\n      case \"comments\":\n        setComments(event.target.value);\n        checkErrorsUsingOnChange(\"comments\", event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Error Handling 1. Function to do error validation when a CHANGE event is detected...\n  // This is called after we update the state variable using \"updateUserData\"\n  const checkErrorsUsingOnChange = (changedElement, newValue) => {\n    switch (changedElement) {\n      case \"name\":\n        newValue.trim().length > 0\n          ? (nameError.current.style.display = \"none\")\n          : (nameError.current.style.display = \"block\");\n        break;\n      case \"age\":\n        newValue.trim().length > 0\n          ? (ageError.current.style.display = \"none\")\n          : (ageError.current.style.display = \"block\");\n        break;\n      case \"gender\":\n        newValue !== \"--- Please select ---\"\n          ? (genderError.current.style.display = \"none\")\n          : (genderError.current.senderError.current.style.display = \"block\");\n        break;\n      case \"email\":\n        newValue.trim().length > 0\n          ? (emailLengthError.current.style.display = \"none\")\n          : (emailLengthError.current.style.display = \"block\");\n        break;\n      case \"comments\":\n        newValue.trim().length > 0\n          ? (commentsError.current.style.display = \"none\")\n          : (commentsError.current.style.display = \"block\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Error Handling 2. Function to do error validation when a BLUR event is detected...\n  // This is called directly using the \"onBlur\" event handler inside a relevant JSX element's opening tag\n  const checkErrorsUsingOnBlur = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        name.trim().length === 0\n          ? (nameError.current.style.display = \"block\")\n          : (nameError.current.style.display = \"none\");\n        break;\n      case \"age\":\n        age.trim().length === 0\n          ? (ageError.current.style.display = \"block\")\n          : (ageError.current.style.display = \"none\");\n        break;\n      case \"gender\":\n        gender === \"--- Please select ---\"\n          ? (genderError.current.style.display = \"block\")\n          : (genderError.current.style.display = \"none\");\n        break;\n      case \"email\":\n        email.trim().length === 0\n          ? (emailLengthError.current.style.display = \"block\")\n          : (emailLengthError.current.style.display = \"none\");\n        /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email) ||\n        email.trim().length === 0\n          ? (emailFormatError.current.style.display = \"none\")\n          : (emailFormatError.current.style.display = \"block\");\n        break;\n      case \"comments\":\n        comments.trim().length === 0\n          ? (commentsError.current.style.display = \"block\")\n          : (commentsError.current.style.display = \"none\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Error Handling 3. Function to do error validation when a SUBMIT event is detected...\n  // This is called when the form is submitted, using the \"onSubmit\" event handler in the <form> opening tag\n  // This will check ALL the elements we have error handling for, as a last chance to find errors before trying to submit\n  // For example, this will be useful if the user doesn't change or blur any elements - just loads the page and clicks the \"submit\" button.\n  const handleValidation = () => {\n    let validationSuccessful = true;\n\n    if (name.length === 0) {\n      nameError.current.style.display = \"block\";\n      validationSuccessful = false;\n    }\n\n    if (age.length === 0) {\n      ageError.current.style.display = \"block\";\n      validationSuccessful = false;\n    }\n    if (gender.length === 0) {\n      genderError.current.style.display = \"block\";\n      validationSuccessful = false;\n    }\n    if (email.length === 0) {\n      emailFormatError.current.style.display = \"none\";\n      emailLengthError.current.style.display = \"block\";\n      validationSuccessful = false;\n    }\n    if (comments.length === 0) {\n      commentsError.current.style.display = \"block\";\n      validationSuccessful = false;\n    }\n\n    return validationSuccessful;\n  };\n\n  // Error Handling 3B. Helper function to reset all the error divs\n  const resetErrorDivs = () => {\n    nameError.current.style.display = \"none\";\n    ageError.current.style.display = \"none\";\n    genderError.current.style.display = \"none\";\n    emailLengthError.current.style.display = \"none\";\n    emailFormatError.current.style.display = \"none\";\n    commentsError.current.style.display = \"none\";\n  };\n\n  // Log all the user's data to the console when they submit the form (by clicking the \"submit\" button)\n  // ... and then reset the form\n  const handleSubmit = async (event) => {\n    // 1. Prevent the default form behaviour\n    event.preventDefault();\n\n    // 2. Reset all the error divs\n    resetErrorDivs();\n\n    // 3. Check to see if there are any validation problems\n    let validationResult = handleValidation();\n\n    if (validationResult === true) {\n      // console.log(\"The user's data:\")\n      // console.log(\"Name\", name);\n      // console.log(\"Age\", age);\n      // console.log(\"Gender\", gender);\n      // console.log(\"Email\", email);\n      // console.log(\"Comments\", comments);\n\n      let user = {\n        name: name,\n        age: age,\n        gender: gender,\n        email: email,\n        comments: comments,\n      };\n\n      let jsonUSer = JSON.stringify(user);\n\n      let settings = {\n        method: \"POST\",\n        body: jsonUSer,\n        headers: {\n          \"Content-Type\": \"application/JSON\",\n        },\n      };\n      let response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\",\n        settings\n      );\n      let message = await response.json();\n      console.log(message);\n      // Reset the state variables (and therefore element values!) to default values\n      setName(\"\");\n      setAge(\"\");\n      setGender(\"Female\");\n      setEmail(\"\");\n      setComments(\"\");\n    }\n  };\n  return (\n    <div className=\"contact_container\">\n      <div className=\"contact_img\">\n        <img src={ProfilePic} alt=\"Profile picture\" />\n      </div>\n      <div className=\"from_main_container\">\n        <div className=\"form_container\">\n          <div className=\"heading_container\">\n            <h2>My React Form</h2>\n          </div>\n\n          {/* Form begins here */}\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              value={name}\n              onBlur={checkErrorsUsingOnBlur}\n              onChange={updateUserData}\n            />\n            <div className=\"error\" ref={nameError}>\n              Please enter your name\n            </div>\n\n            <label htmlFor=\"age\">Age</label>\n            <input\n              type=\"number\"\n              name=\"age\"\n              id=\"age\"\n              value={age}\n              onBlur={checkErrorsUsingOnBlur}\n              onChange={updateUserData}\n            />\n            <div className=\"error\" ref={ageError}>\n              Please enter your age\n            </div>\n\n            <label htmlFor=\"gender\">Gender</label>\n            <select\n              id=\"gender\"\n              name=\"gender\"\n              value={gender}\n              onBlur={checkErrorsUsingOnBlur}\n              onChange={updateUserData}\n            >\n              <option>--- Please select ---</option>\n              <option>Female</option>\n              <option>Male</option>\n              <option>Other</option>\n            </select>\n            <div className=\"error\" ref={genderError}>\n              Please select your gender\n            </div>\n\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={updateUserData}\n              onBlur={checkErrorsUsingOnBlur}\n            />\n            <div className=\"error\" ref={emailLengthError}>\n              Please enter your email address\n            </div>\n            <div className=\"error\" ref={emailFormatError}>\n              Please use a correct email address\n            </div>\n\n            <label htmlFor=\"comments\">Comments</label>\n            <textarea\n              id=\"comments\"\n              name=\"comments\"\n              value={comments}\n              onChange={updateUserData}\n              onBlur={checkErrorsUsingOnBlur}\n            ></textarea>\n            <div className=\"error\" ref={commentsError}>\n              Please enter your comments\n            </div>\n\n            <button className=\"button\" type=\"submit\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card } from \"react-bootstrap\";\n\n\n// Display products with Image, brand Name, Description and Price\nconst ProductCardS=props=>{\n  let priceDisplay;\n  if(props.dataObj.priceO && props.dataObj.priceR){\n    priceDisplay=<span><span className=\"priceRFont\">€{props.dataObj.priceR}</span>  <strike>€{props.dataObj.priceO}</strike></span>\n    }\n    else if(props.dataObj.priceR=== undefined){  \n        priceDisplay= <span className=\"priceRFont\">{props.dataObj.priceO}</span>\n      }else{\n         priceDisplay= <span className=\"priceRFont\">{props.dataObj.priceR}</span>\n      }\n  return(\n        <Card className=\"cardItem\">\n          <Card.Img  variant=\"top\" src={props.dataObj.images[0]}\n          onMouseOver={e => (e.currentTarget.src = props.dataObj.images[1])}\n          onMouseOut={e=>(e.currentTarget.src=props.dataObj.images[0])} /> \n        <Card.Body>\n        <hr></hr>\n          <Card.Title className=\"brandName\">{props.dataObj.brand}</Card.Title>\n          <Card.Text className=\"brandDes\"> \n          {props.dataObj.description}</Card.Text>\n          <Card.Text className=\"priceTag\">\n          {priceDisplay}\n          </Card.Text>\n      </Card.Body>        \n      </Card> \n    )\n}\n\nexport default ProductCardS;","import React, { createContext} from \"react\";\n//import S3 from 'react-aws-s3';\nexport const ProductContext= createContext();\n\n// ? used useContext for accessing data throughout the component hierarchy\n\nconst ProductState =(props)=>{\n    var arrayOfObj = require('../../data.json');  \n    \n  //  for change priceR to PriceO\n  const undefinedPriceRArr= arrayOfObj.filter(e=>e.priceR===undefined);\n  const includePriceRArr=arrayOfObj.filter(e=>e.priceR);\n     const replaceKeyForPriceR = undefinedPriceRArr.map(({\n         priceO: priceR,\n         ...rest\n       }) => ({  \n             priceR,\n             ...rest\n       }));\n    const mergeArrayOfObj=[...includePriceRArr,...replaceKeyForPriceR] \n    return(\n        <ProductContext.Provider value={{arrayOfObj, mergeArrayOfObj}}>\n            {props.children}\n        </ProductContext.Provider>\n    );\n}\n\nexport default ProductState;","import React,{useContext} from \"react\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport \"../../scss/product.scss\"\nimport  { ProductContext } from \"../../context/Products/ProductState\";\n\nconst SortPriceAndSize=(props)=>{\n  const {mergeArrayOfObj}= useContext(ProductContext)\n\n  \n  //display list of clothing sizes \n  let listOfSizes=[]\n  for(let i=0;i<mergeArrayOfObj.length;i++){\n      const keys= Object.values(mergeArrayOfObj[i].sizes)\n      keys.forEach(e=>{\n        if(!(listOfSizes.includes(e))){\n            listOfSizes.push(e)\n        }\n      }) \n    }\n\n    // Sort list of Sizes by alphabetically and numbers\n    let alphabetSizes =[];\n    let numberSize=[];\n    let mergeAlphabetAndNumberArray=[];\n    for(let value of listOfSizes){\n     if(value.includes(\"S\") || value.includes(\"X\") || value.includes(\"M\") || value.includes(\"L\") ){\n       alphabetSizes.push(value);\n     }\n     else{\n      numberSize.push(value);\n     }\n     numberSize.sort((a,b)=>(a-b))\n     mergeAlphabetAndNumberArray=alphabetSizes.concat(numberSize);\n    }\n  \n \n  return(   \n  <> \n  {/* Dropdown menu for filter by price */}\n  <div className=\"sort\">\n   <NavDropdown value=\"test\" title={props.text ? props.text : \"Sort by: \"} className=\"dropdown_menu\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item className=\"list\">What's New</NavDropdown.Item>\n          <NavDropdown.Item className=\"list\">Popularity</NavDropdown.Item>\n          <NavDropdown.Item className=\"list\">Better Discount</NavDropdown.Item>\n          <NavDropdown.Item className=\"list\" onClick={(e)=>props.sortLowToHigh(e.target.textContent)}>Price:Low to High</NavDropdown.Item>\n          <NavDropdown.Item className=\"list\" onClick={(e)=>props.sortHighToLow(e.target.textContent)}>Price:High to Low</NavDropdown.Item>\n   </NavDropdown>\n\n{/* Select bar for filter by Sizes */}\n  <div className=\"filter_size\">\n      <label htmlFor=\"Size\" className=\"size_label\">Size:</label>\n          <select onClick={props.sortBySize} >\n            { mergeAlphabetAndNumberArray !== undefined &&  mergeAlphabetAndNumberArray.map((size,index) => {\n            return (\n          <option key={index}>{size}</option>\n            );\n            })\n            }\n      </select>  \n  </div> \n</div> \n  </>\n);\n}\nexport default SortPriceAndSize;","import React, { useState, useEffect, useContext } from \"react\";\nimport ProductCardS from \"./ProductCards\";\nimport SortPriceAndSize from \"./SortPriceAndSize\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../scss/product.scss\";\nimport { ProductContext } from \"../../context/Products/ProductState\";\n\nconst List = () => {\n  const { arrayOfObj, mergeArrayOfObj } = useContext(ProductContext);\n\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [arrayOfObjState, setArrayOfObjState] = useState(arrayOfObj);\n  const [mergeArrayOfObjState, setMergeArrayOfObjState] =useState(mergeArrayOfObj);\n  const [sizeSelected, setSizeSelected] = useState(false);\n  const [dropDownValue, setDropDownValue] = useState(\"Sort by: \");\n  const [targetSizeValue, setTargetSizeValue] = useState(\" \");\n\n  //this function works for to sort price by low to high and returns new array of objects\n  const sortPriceLowToHigh = () => {\n    setDropDownValue(\"Price: Low to High\");\n\n    setMergeArrayOfObjState(\n      mergeArrayOfObjState.sort((a, b) => {\n        return a.priceR - b.priceR;\n      })\n    );\n  };\n\n  //this function works for to sort price by high to low and returns new array of objects\n  const sortPriceHighToLow = () => {\n    setDropDownValue(\"Price: High to Low\");\n\n    setMergeArrayOfObjState(\n      mergeArrayOfObjState.sort((a, b) => {\n        return b.priceR - a.priceR;\n      })\n    );\n  };\n\n  //this function works for to filter products by size and returns new array of objects\n  const filterProductsBySize = (event) => {\n    setTargetSizeValue(event.target.value);\n    setSizeSelected(true);\n\n    setMergeArrayOfObjState(\n      mergeArrayOfObj.filter((e) => e.sizes.includes(event.target.value))\n    );\n  };\n\n  useEffect(() => {\n    if (sizeSelected === true) {\n      setIsFirstRender(false);\n      switch (dropDownValue) {\n        case \"Price: Low to High\":\n          sortPriceLowToHigh();\n          break;\n        case \"Price: High to Low\":\n          sortPriceHighToLow();\n          break;\n        default:\n          break;\n      }\n      setSizeSelected(false);\n    }\n  },);\n\n  if (dropDownValue === \"Sort by: \" && isFirstRender === true) {\n    return (\n      <>\n        <SortPriceAndSize\n          text={dropDownValue}\n          sortLowToHigh={sortPriceLowToHigh}\n          sortHighToLow={sortPriceHighToLow}\n          sortBySize={filterProductsBySize}\n          data={arrayOfObjState}\n        />\n        <div className=\"cardList\">\n          {arrayOfObj !== undefined &&\n            arrayOfObj.map((currentObj,index) => {\n              return <ProductCardS key={index} dataObj={currentObj} />;\n            })}\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <SortPriceAndSize\n          text={dropDownValue}\n          sortLowToHigh={sortPriceLowToHigh}\n          sortHighToLow={sortPriceHighToLow}\n          sortBySize={filterProductsBySize}\n          data={mergeArrayOfObjState}\n        />\n        <div className=\"cardList\">\n          {mergeArrayOfObjState !== undefined &&\n            mergeArrayOfObjState.map((currentObj,index) => {\n              return <ProductCardS key={index} dataObj={currentObj} />;\n            })}\n        </div>\n      </>\n    );\n  }\n};\n\nexport default List;\n","import React from \"react\";\nimport List from \"../components/Product/List\";\nimport ProductState from \"../context/Products/ProductState\";\n\nconst ProductList=()=>{\n    return(\n        <div>\n            <ProductState>\n            <List />\n            </ProductState>\n        </div>\n    )\n}\n\nexport default ProductList;","import React, { useState } from \"react\";\nimport \"../scss/login.scss\"\n\nconst LogIn = () => {\n\n    // State is in control of the data in this React component!\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    // We use refs to store a reference to a JSX element, so we can select it if we need to\n    const nameError = React.createRef();\n    const passwordError = React.createRef();\n\n    // Function 1: to update a state variable, based on what the user changed\n    // Once the state variable is changed, the checkErrorsUsingOnChange() function will also be called, for validation\n    const updateUserData = event => {\n        switch (event.target.name) {\n            case \"name\":\n                setName(event.target.value);\n                checkErrorsUsingOnChange(\"name\", event.target.value);\n                break;\n            case \"password\":\n                setPassword(event.target.value);\n                checkErrorsUsingOnChange(\"password\", event.target.value)\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Error Handling 1. Function to do error validation when a CHANGE event is detected...\n    // This is called after we update the state variable using \"updateUserData\" \n    const checkErrorsUsingOnChange = (changedElement, newValue) => {\n        switch (changedElement) {\n            case \"name\":\n                newValue.trim().length > 0 ? nameError.current.style.display = \"none\" : nameError.current.style.display = \"block\";\n                break;\n            case \"password\":\n                newValue.trim().length > 0 ? passwordError.current.style.display = \"none\" : passwordError.current.style.display = \"block\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Error Handling 2. Function to do error validation when a BLUR event is detected...\n    // This is called directly using the \"onBlur\" event handler inside a relevant JSX element's opening tag\n    const checkErrorsUsingOnBlur = event => {\n        switch (event.target.name) {\n            case \"name\":\n                name.trim().length === 0 ? nameError.current.style.display = \"block\" : nameError.current.style.display = \"none\";\n                break;\n            case \"password\":\n                password.trim().length === 0 ? passwordError.current.style.display = \"block\" : passwordError.current.style.display = \"none\"; \n                (/(?=.*[0-9])/.test(password)) ? passwordError.current.style.display = \"none\" : passwordError.current.style.display = \"block\";\n                break;\n            default:\n                break;\n        }\n    }\n\n    // Error Handling 3. Function to do error validation when a SUBMIT event is detected...\n    // This is called when the form is submitted, using the \"onSubmit\" event handler in the <form> opening tag\n    // This will check ALL the elements we have error handling for, as a last chance to find errors before trying to submit\n    const handleValidation = () => {\n        let validationSuccessful = true;\n\n        if (name.length === 0) {\n            nameError.current.style.display = \"block\";\n            validationSuccessful = false;\n        } \n        \n        if (password.length === 0 || !(/(?=.*[0-9])/.test(password)) || password.length < 8) {\n            passwordError.current.style.display = \"block\";\n            validationSuccessful = false;\n        }\n\n        return validationSuccessful;\n    }\n\n    // Error Handling 3B. Helper function to reset all the error divs\n    const resetErrorDivs = () => {\n        nameError.current.style.display = \"none\";\n        passwordError.current.style.display = \"none\";\n    }\n\n    // Log all the user's data to the console when they submit the form (by clicking the \"submit\" button)\n    // ... and then reset the form\n    const handleSubmit = async event => {\n        // 1. Prevent the default form behaviour\n        event.preventDefault();\n\n        // 2. Reset all the error divs\n        resetErrorDivs();\n\n        // 3. Check to see if there are any validation problems\n        let validationResult = handleValidation();\n\n        if (validationResult === true) {\n            let user = {\n                name: name,\n                password: password,\n            }\n\n            let jsonUser = JSON.stringify(user);\n\n            let settings = {\n                method: \"POST\",\n                body: jsonUser,\n                headers: {\n                    \"Content-Type\": \"application/JSON\"\n                }   \n            }\n\n            let response = await fetch(\"https://jsonplaceholder.typicode.com/users\", settings);\n            let message = await response.json();\n            console.log(message);\n\n            // Reset the state variables (and therefore element values!) to default values\n            setName(\"\");\n            setPassword(\"\");\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"form_container\">\n                <div className=\"heading_container\">\n                    <h2>Log In</h2>\n                </div>\n\n                {/* Form begins here */}\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"name\" className=\"label\">Name</label>\n                    <input id=\"name\" name=\"name\" value={name} onBlur={checkErrorsUsingOnBlur} onChange={updateUserData} />\n                    <div className=\"error\" ref={nameError}>Please enter your name</div>\n\n                    <label htmlFor=\"password\" className=\"label\">Password</label>\n                    <input name=\"password\" id=\"password\" value={password} onBlur={checkErrorsUsingOnBlur} onChange={updateUserData} />\n                    <div className=\"error\" ref={passwordError}>Please enter your password</div>\n\n                    <button className=\"button\" type=\"submit\">Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default LogIn;","import React, { useContext } from \"react\";\nimport { ProductContext } from \"../../context/Products/ProductState\";\n\n// ? this function works for to find the brand which has the most products that cost less than 40\nconst brandByCostLessThan40 = (mergeArrayOfObj) => {\n  //productData returns a new array of objects which has the priceR less than 40\n  const productData = mergeArrayOfObj.filter((e) => e.priceR < 40);\n\n  //sameBrand returns object with same brand name and its counter\n  const sameBrand = productData.reduce((current, currentData) => {\n    current[currentData.brand] = (current[currentData.brand] || 0) + 1;\n    return current;\n  }, {});\n\n  //sameBrand gives an array of same brand counter\n  const brandArray = Object.values(sameBrand);\n  //maxValue gives max value from brandArray\n  const maxValue = Math.max(...brandArray);\n\n  // it returns brand name which has most products\n  return Object.keys(sameBrand).find(\n    (key) =>  sameBrand[key] === maxValue\n  );\n};\n\n// ? this function works for to find the brand which offers the largest selection of sizes to the customer\nconst brandByLargestSelectionOfSizes = (mergeArrayOfObj) => {\n  //here it return new array of objects with the largest selection of sizes, and push in newProductData\n  let max = 0,\n  newProductData = [];\n  mergeArrayOfObj.forEach((obj) => {\n    if (obj.sizes.length > max) {\n      max = obj.sizes.length;\n      newProductData = [obj];\n    } else if (obj.sizes.length === max) {\n      newProductData.push(obj);\n    }\n  });\n\n  // sameBrand returns Objects with brand name and counter for same brand and return brand name and counter for same brand\n  const sameBrand = newProductData.reduce((current, currentData) => {\n    current[currentData.brand] = (current[currentData.brand] || 0) + 1;\n    return current;\n  }, {});\n \n  // it returns keys name of objSameBrand\n  return Object.keys(sameBrand);\n};\n\n\n\nconst StatisticData = () => {\n  const { mergeArrayOfObj } = useContext(ProductContext);\n\n  return (\n    <>\n      <div className=\"statisticData\">\n        <h3>\n          The brand which has the most products that cost less than 40 euros\n        </h3>\n        <ul>\n          <li>\n            <h5>{brandByCostLessThan40(mergeArrayOfObj)}</h5>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"statisticData\">\n        <h3>\n          The brand which offers the largest selection of sizes to the customer\n        </h3>\n        <ul>\n          {brandByLargestSelectionOfSizes(mergeArrayOfObj).map((brandName) => {\n            return (\n              <li>\n                <h5>{brandName}</h5>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default StatisticData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StatisticData from \"../components/Statistic/StatisticData\";\nimport ProductState from \"../context/Products/ProductState\";\n\n\n\nconst Statistic=()=>{\n    return(\n      <>\n      <li>\n        <ul>\n          <Link to=\"/statistic\"></Link>\n        </ul>\n      </li> \n      <div>\n      <ProductState>\n      <h1 className=\"headingOfStatistic\">Statistic</h1>\n      <StatisticData /> \n      </ProductState>\n      </div>\n      </>\n    )\n}\n\nexport default Statistic;","import React from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./views/Home\";\nimport About from \"./views/About\";\nimport Contact from \"./views/Contact\";\nimport ProductList from \"./views/ProductList\";\nimport LogIn from \"./views/LogIn\";\nimport Statistic from \"./views/Statistic\";\nimport \"./scss/navigation.scss\"\n\n\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        {/* Navigation bar - will always render no matter which route we are using */}\n        <Navigation />\n        <main>\n          <Switch>\n            {/* Route 1. Band page */}\n            <Route path=\"/\" exact component={Home} />\n\n            {/* Route 2. Lead singer */}\n            <Route path=\"/about\" exact component={About} />\n\n            {/* Route 3. Women */}\n            <Route path=\"/contact\" exact component={Contact} />\n\n            {/* Route 4. Products */}\n            <Route path=\"/productList\" exact \n            render={ () => {\n                            return (\n                                 <ProductList key={Math.random()}/>\n                            );\n                        } }  \n                         />\n\n            {/* Route 5. Statistic */}\n            {/* <Route path=\"/statistic\" exact component={Statistic} /> */}\n            <Route \n                        path=\"/statistic\" \n                        exact \n                        render={ () => {\n                            return (\n                                 <Statistic />\n                            );\n                        } }  \n                        />\n\n              <Route path=\"/login\" exact component={LogIn} />\n\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nconst root=document.querySelector(\"#root\");\n\nReactDOM.render(<App />,root);\n"],"sourceRoot":""}